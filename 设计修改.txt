考虑合作伙伴需要的修改方案，对修改进行程序上的设计。

*编程实现实体距离投影，单方向
1 投影的实现方案：
A 移动：追随实体而移动
B 背景距离：
？动态计算，每个实体与每个背景的距离
？预处理设置，由当前场景类固定距离
？？实体距离就是实际距离？？
C 形状：平行光投影，同样图形，调整黑色变暗，边缘模糊
D 平行光束方向：
？固定光方向
？动态光方向
？场景设置光方向
2 投影的编码位置：
A 动态投影：场景类的更新方案中
B 静态投影：作为实体类的子节点出现
？预处理距离：在实体类加入场景的时候添加
？固定距离：在实体类初始化的时候添加

决定：
1 投影的实现方案：
A 移动：追随实体而移动
B 背景距离：预处理设置，由当前场景类固定距离
C 形状：平行光投影，同样图形，调整黑色变暗，边缘模糊
D 平行光束方向：场景设置光方向
2 投影的编码位置：实体类加入场景时

*细节效果动画，单元素编程实现动画
1 实现方案：
A 整体设计：
用DB-SD体系存储，使用现有的SD_ScriptAction实现，使用Parser-Handler体系生成FiniteTimeAciton类的返回值
存储在实体的Action类里作为一个FiniteTimeAction使用，有固定的参数列表，仅在DB-SD体系之中存储
B 存储方案：
DB-SD体系，SD_ScriptAciton的实例存储具体信息，DB体系存储具体SD实例和名字的索引，实体类使用动画名称从DB中找寻对应索引的SD
2 实现位置：
DB-SD体系，使用通用性模板
修改DB_Animation？修改DB_Aciton？
Parser-Handler体系，修改ActionParser？
添加新的Handler？创造新的P-H体系？
是否需要一个具有通用性的P-H体系？如何实现它？

决定：
实现方案：使用DB-SD体系，和P-H体系的模板拓展
实现位置：使用之前的类进行修改，即ActionHandler体系修改