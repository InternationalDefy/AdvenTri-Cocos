数据库格式
Table_UIItem.csv：

格式综述：
Line 1 n，总数据元的数目。
Line 2 起，共 n 个数据元。

数据元格式：
Line 1 string数据元名称，string所使用的监听系列名称，string该UI_Item类型，int m包含精灵数。
Line 2->m+1 共 m 行
每行格式：string精灵[m]的图像名称，string精灵[m]所使用的动作包名称，int，int精灵[m]对于该UIItem中心的位置偏移量。（UI_Item以(0.5,0.5)为锚点）

注释：
1：UI_Item类型：
区别于回调函数如何处理监听项目，以及Item创建之后如何分发消息。

DiaCtrl：对话框控制元件。
LaCtrl：语言翻页控制元件。
。。。

2：UI_Item使用的ListenerSet：
使用不同的ListenerSet会对不同消息给与不同的回调函数，它使得UIItem在响应消息方面有不同之处。

LaCtrlListenerSet_Left：控制Page_Dialogue中的M_LaEmoji翻页。
LaCtrlListenerSet_Right：控制Page_Dialogue中的M_LaEmoji翻页。
。。。

数据库格式：
Table_UIMenu.csv：

格式综述：
Line 1 n，总数据元数目。
Line 2 起，共 n 个数据元。

数据元格式：
Line 1 string数据元名称，bool该UI_Menu是否在创建时立即激活，int该UI_Menu的ZOrder，int m包含UI_Item数目。
Line 2 string入场动作类型，int k入场动作变量数目，1->k string[k]入场动作变量。
Line 3 string出场动作类型，int k出场动作变量数目，1->k string[k]出场动作变量。
Line 4 ->m+3 共 m 行
第m个UI_Item ： string名字，bool激活入场动画，float，float，入场位置，int，透明度

注释
1：动作类型以及参数参见Animation的记录。
2：bool ActiveEnter(M) 是控制是否在 UI_Menu入场时激活该 UI_Item的bool型变量。

数据库格式：
Table_Dialogue.csv：
Line1:	Name NumberOfPages PosX PosY Opacity
Line2:	EnterActionType numberOfParams Params
Line3:	ExitActionType numberOfParams Params				注1
Line4:	1->NumberOfPages:
	Line1:	BGName CharIconName CharIconOffSet X Y			
	Line2:	LaEmojiName LaEmojiPosX LaEmojiPosY NumberOfItems
	Line3:	EnterActionType numberOfParams Params
	Line4:	ExitActionType numberOfParams Params
	Line5:	LaCtrlItem1Name offSet Opacity 
	Line6:	LaCtrlItem2Name offSet Opacity 
	Line7:	1->NumberOfItems:
		chooseItemsName offSet Opacity 				注2

注释
1：动作类型参见Animation的记录
2：对话选项会出现ChoiceItem来决定。