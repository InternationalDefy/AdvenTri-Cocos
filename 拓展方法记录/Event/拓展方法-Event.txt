添加新的Event：
1.在M_EventHandler类中的handleDataType函数中添加如果需要使用的新数据类型。同时在其中实现对不同数据类型的Event.UserData的设置。
2.在Table_Event.csv中填写SD，并使n++。
3.在数据库格式中记录新的记录使用方法。

添加新的ListenerSet：
1.确保需要使用的Parser均已实现。
2.在Table_ListenerSet中填写SD,并使n++。

添加新的PhysicsParser：
1.在筛选器PhysicsEvent中创建新类EPP_XXX继承自M_EventParserPhysicsBase
2.规划该物理回调函数需要使用的物理实体BodyTag，并在 系统设计-Event.txt 中记录。
3.实现虚函数PhysicsCallback(PhysicsContact)
4.在Ref_EventPhysics.h中注册该Parser类
5.在M_EventHandlerPhysics::PhysicsCallback(PhysicsContact)函数中添加该回调的选择语句分支。

添加新的CallbackParser：
1.在筛选器CallbackParser中创建新类CP_XXX继承自M_CallbackParser
2.在Ref_Callback.h中注册该类的.h头文件
3.实现该类，使用CREATE_CALLBACKPARSER宏，实现init函数和onCustomEvent，注意要使用updateLimit()
4.在M_CallbackHandler::handleDataType(SD_Callback*)函数中实现 创建时 的类型分派动作。
5.程序部分完成。
数据部分
1.确保程序部分完成的前提下，在Table_Callback.csv填写SD，使n++
2.在 系统记录-Event.txt 记录新类功能，在 数据库格式-Event.txt 中记录数据库格式。

添加新的DispatchParser：
1.在筛选器DispatchParser中创建新类DP_XXX继承自M_DispatchParser
2.在Ref_Dispatcher.h中注册该类的.h头文件
3.实现该类，使用CREATE_DISPATCHPARSER宏，实现init函数和监听函数，注意要使用updateLimit()
4.在M_DispatchHandler::handleDataType(SD_Dispatch*)函数中实现 创建时 的类型分派动作。
5.程序部分完成。
数据部分
1.确保程序部分完成的前提下，在Table_Dispatcher.csv填写SD，使n++
2.在 系统记录-Event.txt 记录新类功能，在 数据库格式-Event.txt 中记录数据库格式。