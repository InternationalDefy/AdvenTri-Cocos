ActionHandler 解析脚本生成Action* 实例的系统，拥有P-H体系，用来处理字符串组，是一个单例，由GetInstance获取并使用。
实际上是Action的管理类，添加AnimationPack需要使用ActionHandler的单例。
还可以创建出与Node无关（实际上是空Node）的EnvirAction

ActionParser
派生类记录：
MAP_Animate	逐帧动画，Parser使用 DB_Animate 创建动作
MAP_EntityBlast	在实体周围发出爆发效果，img素材用参数指定
MAP_EnvirBlast	Envir动作，在某一位置发出爆炸效果，img素材由参数指定
MAP_FadeIn	废话
MAP_MoveTo	废话

Animate 逐帧动画类，拥有DB-SD体系，只负责生成对应的Animate* 实例

Animation 动作类，拥有DB-SD体系，

AnimationPack 动作包类，拥有DB-SD体系，SD中保存的是对 SD_Animation 的名字，创建实例之后拥有一个 map<string,FiniteTimeAction*>Action与创建时关联的Node有关联，并且使用动作的操作是调用其clone()

实现机制：

Animate：用Table_Animate.csv中的信息创建逐帧动画，很慢需要预载

Animation：用Table_Animation.csv中的脚本，经由ActionHandler寻找正确的ActionParser生成 关联实体 的动作。

AnimationPack：实际上只有一个map，为了方便而出现的类，用Table_AnimationPack中创建来为实体使用。

内存管理&&生命周期：

每一个由ActionHandler创建出的动作均和 Node 关联，并且被添加进 M_AnimationPack 时没有retain，所以 M_AnimationPack 和父节点同生命周期
但是！目前还M_AnimationPack创建函数中屏蔽了autorelease
