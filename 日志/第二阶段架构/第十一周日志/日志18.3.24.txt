今天要依据NPC类得考量来设计其内容，同时进行文件派发。
Table_NpcBreed.csv SD_nBreed DB_nBreed M_Npc Ref_Npc Ref2Npc
Table_NpcBreed.csv
n,
Name,textureName,LanguagePackName,animationPackName,physicsBodyName,eventListenerName,uiName,controllerName,int numberOfVulnerable,Vulnerables,
考虑到这些设计，可能需要重新实现LaEmoji系统。
别可能了，绝对需要重新实现。并加入LaEmojiPack。
一些核心的方法可以保留，但是程序结构和名字都比较混乱。
名字的修改和逻辑结构的修改都需要进行。
首先修改文件名 文件名修改结束
修改类名 类名修改结束
修改内部逻辑使 DB SD归于继承类与派生类。
用DB的形式修改LaEmojiData
也许需要把DB一改三？先备份所要修改的类
仿照其他DB的形式创建DB_Emoji DB_Dialog 以DB_ItemState为例
我（当时）在想什么！？居然把List的属性写到了Dialog的SD里，改，必须改！
用了另一种方法去相对缓和的处理SDEmoji，和SDDialog，但是考虑到SD只有一行项目即其文件名，其实可以删去其文件名的意义？
或者考虑另一种设计？使SD_LaEmoji成为一个Item的载体，这样也许会比较难以访问，也需要对生成器的函数做很多修改。

目前维持原判，即双定义SD
现在修改重灾区 DB_LaEmoji
animation的定义形式必然需要修改，但是目前不行。
修改了DB_LaEmoji的形式，修改了继承方法 init 增添了AnalyseEndln的次数，使得现在能且只能添加三行注释语句
现在问题的重点是GetLine的设计。
重灾区修改完成，进行一次Debug
明天再尝试修改创建体系。应该比DB容易得多。
果然还有问题。Parser似乎出了问题。
DB_Emoji DB_Dialog的问题，Endln处理不当。
似乎重灾区反而没有问题。
*****************
以上为23日日志
*****************
现在测试类里尝试LaEmoji是否能够合理的创建。
修改M之后，之前的设计功能现已完全移植，考虑到需要更多的更方便的拓展，需要将其予以完善。
要拓展的第一个功能是 setPosition和addScene的统一管理。
事实证明 setPosition是一个废项 可以删除
addScene操作有用还是需要保留的，但是创建的问题比较难以规划，也许需要即时设置Layer
ok 也是废的，除非加入预载操作。
先测试性能，考虑是否使用预载操作。
不需要预载操作， ok根本就是废的。
addToScene操作予以保留，但是把ParentLayer属性去掉，因为没有必要预载操作。
对EventDispatcher 和 Aniamtion进行重新考虑
先修改了一下代码结构，使得其看起来更舒服。
考虑EventDispatcher需要的和可行的拓展
是否再Pack层面实现？or？在M层面实现？
+同一段LaEmoji也许使用多次，用不同的Listener?
+在Pack层面可以在Sys层面添加更多的拓展。
-在M层面也可以在Sys层面添加更多的拓展。
-在M层面可以方便的管理监听器的有无。如果在PACK层面则需要持有Sys的指针，对其访问来删去Listener
+Pack层面实现Listener则可以在Sys层面进行管理。
-在Pack层面实现会导致没有Pack访问的事件监听难以拓展。
！决定，在M层面实现。
再考虑所需要实现的不同种方法。
1 对于实体的speak（）方法，需要一个Current的存在，不然会不断打字。（可能与LaEmojiPack结合）
2 LaEmoji的出现并没有必要做事件系统，但是翻页需要。
3 需要什么样的监听？
位置？互动？按键？ 都需要？所以需要一个Parser去设置？
这些特殊的可以设置到Entity即其父节点上，其自身只需要默认的按键监听即可。即翻页。所以目前不需要太多的拓展属性。
但需要统一方法用update dt 实现。
4 需要什么样的实现动画？
各种各样的形式和参数，需要一个Parser和Enum。动画显然需要拓展属性。
先实现3
实现了，下来需要一个Parser和Enum，在M_Emoji层面实现创建动画。