划水一整天就很难受。现在的问题有二：
-实体类和主角类的很多行为都没有成功定义。
-需要一个NPC类 既不是实体也不是主角。

然后的规划是开始场景类和UI的规划。

所以呢？

先对实体类主角类行为进行完善。

在ProcessOn和当前程序上进行修改。

考虑到不同行为只有在不同状态才能发生，发生不同行为的同时也会改变某一状态。

主角类和敌人类作为活动的实体类需要一个状态类。现在需要对状态类的存现形式进行设计。

看书考虑以下问题：
需要实现的是状态类？还是状态模式？

现在的考虑：状态类可以解决问题。因为HandleInput在输入处已经解耦了。当然也有考虑连续的问题，所以还需要问。

在ProcessOn上设计了一众状态类

*****************
以上为4日日志
*****************
观察ProcessOn上的设计内容，使用物品状态的实现还要依赖于一套物品系统。

目前先屏蔽其实现的细节，考虑状态类的统一规划：

这几类状态的退出都是进入Dash或者Standred状态，而开启都是从Standred状态进入，故而onEnter onExit操作不必考虑其状态的来源，只需做到制定的操作。
状态持续时间可以用内部计时器实现，在终止状态时或退出状态时删除内部计时器，或者有其他判定条件的检测函数，均考虑其中。

Player类State类的持有关系？State类要处理各种不同的状态所以静态类难以正确的Handle，似乎可以，但是在State的数量扩展的时候以及一个State需要一个计时器，这个不能够消除。所以不能使用静态存在方式。则使用？相互持有的关系？否。State类作为Player的子节点出现，持有Player的指针？可以。只要不是子节点都行。
创建操作？计时器？在State基类中实现。

子节点就算了，Player类可以直接持有？在使用时替换即可。
Nope应当作为子节点出现。

突然发现很多类都没有正确的Destructer，也许需要多用些功夫重写。在游戏开始实际运行之后。

今天完成了PlayerState的基类
1：派生类方法尚不明确如何实现
2：很多destructor没写，估计要补是个大工程，等State和NPC完成后。