在增加一个状态类为Debuff类

这个问题难以解决。。。。
1：以内变量的形式处理 2：写出一个Debuff类的派生体系
1：
++便于实现
+便于访问所有实体类的数据
--极难进行数值上的拓展
-当变量增多时维护逻辑复杂
2：
--难于实现
-难于访问实体类数据
？想要数值拓展还需要深入数据库修改
++维护逻辑简便

内变量形式设计方案：
1：以一个map<std::string, bool>内变量实现状态的表示
2：以一个map<std::string, float>计时器表示当前状态持续的时间
float计时器在状态改变时改变
利用其在更新方法的状态更新中   对不同状态在一定时间内的行为进行分派
3：当float达到状态上限时间时，状态执行切换操作，包括：
动画的更新 逻辑的更新：状态时间重置 状态的改变（enum）
4：当外界的某种伤害给予实体时，状态需要依据此伤害的种类进行改变，
执行操作：
动画的更新 逻辑的更新：状态时间重置 状态的改变
5：所谓动画的更新包含退出状态的动画和新进状态的动画，其需要由不同前后状态进行分派处理。
6：位于某种debuff状态的实体被消亡时，执行该状态对应的消亡方式：
特有的消亡动画 逻辑上的更新（如统计等）

*****************
以上为7日日志
*****************
今天要依据昨天的设计思想实现Enum Debuff

现在考虑Sound的配置，基本上需要Animation的地方都需要Sound，即使目前无法实现之，亦可先待定之，再考虑以后用搜索ANimation即可。

也许Effect应当在物理监听处处理？这样可以使位置更准确。

完善了hurt和debuff体系，完善了技能操作需要的冷却访问，因为VS的一些问题出了奇怪的访问，重新生成等待结果，先出去吃饭。

重新生成以后问题解决

加入新的PSkill以实现Dash Parry等操作。

判断是否在Hurting的操作在State中处理。
将Hurting的计时器放进state？nope！

基本上完成了逻辑的分派和hurt的实现，不过没有动状态类的进入和退出操作。