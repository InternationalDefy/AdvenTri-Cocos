移植以后出现Camera类各种新问题
现在绝望中。。。原因：
1：3.09+版本物理引擎崩坏
2：3.04-3.08版本抖动严重
3：3.03-版本摄像机不完善

考虑的解决办法：
1：修改3.09+物理引擎：对不起，接口，改你马勒戈壁
2：修改3.03-版本中的摄像机类：不现实，考虑到太多OpenGl内容，及3.03-其摄像机模拟机制与+不同
3：（40%可行）使用b2D，由于Api和cp完全不同，和实体类的所属关系也完全不同，使用此法 1：需要学习一套完全不同的api 2：几乎重写所有实体类
4：（60%可行）尝试在3.08中修改更新方法。对比3.03-或3.09+实现

目前采用方法4：
发现mainloop中 3.08 3.03不同之处
1：.03有一个FreqInterval 
2：.08有重启Director操作
3：.03有一个跳过delta操作
4：.08update的time类可能有问题
5：.03对GLBUFFER的宏调用

.08里的experimentbuffer可能是罪魁祸首，欲删除之再尝试。

.13版本中有相同的问题，决定在其中进行源码修改，也可以考虑.04版本来考虑最近的修改。

3和4在物理更新上有很多逻辑上的不同和时间上的不同：
shape所使用的update方法其实一样，但是名字不同，实际都是在updatescale
body的update方法world的update方法不同：
1：
.03在body的更新中对
node position 
body position 
node scale 进行了步进更新
.04没有
2：
.03 .04world的update方法上没有区别
其共同作用：
1：body transferm
2：调用body update

经过一天近乎绝望的debug，终于发现是摄像机更新方法的位置不对
可以用两种方案解决：
1：runaction（有艺术效果，但需要考虑，Mpctrl中viewposition的重设）
2：updateFinish（要研究一下）
3：cameraphysics，都是Node，可以试试。
4！！！明天！！！

今天多做一些，帮明天枪毙掉方案3.方案1可以脚本实现。

*****************
以上为8日日志
*****************

今天目标是建立一个摄像机系统，需要实现的目标：
1：使用runAction来控制摄像头的移动，在实体经过屏幕边缘后播放移动动作。
2：需要一些操作的解释器来控制摄像机的脚本移动，包括移动速度，移动始末位置，以及在任何时间都可以调用。

设计思路：
1：用一个M_cCtrl类进行摄像机移动操作并予以封装。
2：M_cCtrl应该具有默认控制方法 和外部访问操作。
3：默认方法使用脏标记。
4：和M_cCtrl为友元。
5：在Scene创建时创建并初始化，持有Scene的Camera的引用。

考虑：有必要p和c相互持有吗？似乎c持有p即可，p无需？访问c的数据？
放屁！都需要访问！可是堆栈会降低效率，所以直接访问？

目前实现了依据Pctrl设置camera位置
剩余两个问题：
1：何时何处优雅地创建cctrl
2：还有cctrl对pctrl的view修正
3：还有cctrl对window边界的处理

vc\include\xmemory0(592): error C3130

修改debug配置之后，问题解决。

再加上高度设置动画，考虑到可能会有场景缩放的问题。

对于Pctrl的兼容设置：
1：需要一个真实的mousepos
2：公式？

解决1：设置一个Radio于cctrl中

问题23解决，创建可以利用脚本。这个需要场景类的分析器，或者一个数据库？

今天任务完成！