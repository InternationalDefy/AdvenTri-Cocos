现在开始构想角色类

角色类包括主角类，敌人类，NPC类
（是否都需要从实体类继承而来？）
对！这样方便更新和管理。

更新方法和内存管理都要实现

？也许需要一个实体管理器类

主要的属性和方法都要具备，同时一定要具有可以添加新属性的能力
具体的属性和方法：此处所说是与游戏运行有关的属性和方法
1.virtual void update()
2.virtual void collide()
3.virtual void button()
4.virtual void kill()
5.virtual void aiUpdate()
改：3.5.在Controller中实现

数据驱动的属性（数据）设计，方便于策划修改和存档存取

事件监听（包括碰撞，操作等目前尚不知晓在何处处理）

控制系统直接和主角相关联

技能系统与主角相关联

场景类只不过是诸多大类的容器

目前目标：先构建在实体的巨大体系之下构建起来的主角类，并为其添加控制系统

控制系统应当是可扩展的，其包括AI控制，空控制（默认控制），和案件操作以及其他将要加入的控制器解决方案