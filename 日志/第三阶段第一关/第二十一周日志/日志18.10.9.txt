现在主菜单的效果并不如人意，问题集中表现在以下几个方面：
1：随机运动的时间应该是一个不同的值，不能使用定值
2：随机运动的物体颜色应该更暗一些
3：铅笔动画仍需调整。
4：单元件素材仍未完成。
接受素材・中仅有翻页动画可用。。。
5：主菜单的翻页动画？

1解决
2解决
3解决 但是铅笔画风还待考虑。

先不考虑45，先进行第一场景的创建和测试体系的搭建。

测试体系需要：
A 完全数据驱动的大关，
B 预加载每一个系统并且监控其加载情况
C 可以用一个特定的存档，打开特定的场景
D 存档编辑能力

*******************
以上为9月24日日志
*******************
24日以及以前的日志记录了主菜单阶段的工作。

现在开始设计一个测试体系，它的基本思路是在尽可能保存确定设计和场景数据的情况下从某个节点开始测试。
思考确定设计和场景数据的具体内容，同时思考在设计改变时场景测试体系如何响应：
确定设计：
数据库设计，已经加载的数据库，已经编程录入的逻辑
场景数据：
需要加载的某个存档，场景其他实体的状态，

1：由于存档系统的实现很简单且没有具体脚本控制，这里也许需要考虑对存档系统的重构。
2：先不考虑复杂的存档系统，利用简单的游戏原型思考测试体系的搭建
例如Aaero：
测试某一关卡的某一段时需要的数据包括：
生命，分数，乘数，开始节点（音乐播放时间和Aero位置）

测试体系需要在数据改动时不和数据解耦。这就需要以下一些必须的方面：
1：确保数据改动没有使数据库出现读取规则漏洞
2：确保改动的数据可以在当前场景中还原
3：确保修改的内容独立在当前关卡中测试
以下设计可能需要修改：
1：关卡数据库不能再使用整体式，应该分开为单文件一个关卡的处理。
2：测试体系前应该有一个对所有使用数据库的预加载活动，并且能够标明出现差错的数据库所在。
3：必须有一个更简单有效的动态修改存档的系统或工具。
以上的方向，现在考虑具体的修改：

1：直接修改数据库DB_GameLayer和Table_GameLayer.csv

2：测试类初始化方法中添加预加载数据库的方法。

3：对存档系统加一个带有图形界面的编辑器？还是使用shell类似的脚本？
推荐使用脚本构建存档编辑器。

添加新类：“M_SaveEditor”
