现在主菜单的效果并不如人意，问题集中表现在以下几个方面：
1：随机运动的时间应该是一个不同的值，不能使用定值
2：随机运动的物体颜色应该更暗一些
3：铅笔动画仍需调整。
4：单元件素材仍未完成。
接受素材・中仅有翻页动画可用。。。
5：主菜单的翻页动画？

1解决
2解决
3解决 但是铅笔画风还待考虑。

先不考虑45，先进行第一场景的创建和测试体系的搭建。

测试体系需要：
A 完全数据驱动的大关，
B 预加载每一个系统并且监控其加载情况
C 可以用一个特定的存档，打开特定的场景
D 存档编辑能力

*******************
以上为9月24日日志
*******************
今天来实现AI的控制器，考虑它需要什么参数，以及如何实现。

AI控制器需要通用的参数初始化方法，但是Controller类并没有实现它，
控制器AI实现通用控制方法，其余由派生类实现，派生类体系可以在Ctrl_AI中建立。

*****************
以上为25日日志
*****************
昨天做的不多，不能说完全实现了AI控制器，现在需要进一步设计的同时慢慢实现。

要做双重初始化，需要考虑对数据库的修改。
数据库修改计划，SD_Item和SD仍然可用，但是读取方式不再与Ctrl_Base的派生类有关，而是，只按固定的顺序读取数据进入SD，自由使用数据进行由Ctrl_Base的派生类实现。

先去华哥的课睡觉，睡回来继续，现在有丶困。

*****************
以上为26日日志
*****************
昨天很傻逼，今天不能再浪费时间了。
对SD和csv文件都需要一些修改。
在SD中删除Delta属性，将其作为变量加入其他Ctrl的处理中。
这里有一个重大的问题，AI真的需要Delta吗？而SimpleCtrl又极有大范围修改Delta的可能。

这里，Ctrl系统最好还是完全重写。

我们，把Ctrl分为两部分，一部分表示 小动作的进行，确定无疑地比如移动，攻击面对方向某处，旋转至何角度，使用某种技能等。
另一部分 是统观全局的控制，对小动作进行调用，比如Ctrl_Simple按照csv文件定义的SD初始化，定时控制实体。

这需要两个P-H体系，一个静态实例控制小动作不牵扯实体逻辑，一个派生类实例作为子节点。

带着这个美好的愿望，硬着头皮重新实现Ctrl体系，今天的任务如此。

从数据库开始修改。数据库输入其实只需要让DB知道读入在此结束即可，不需要固定的点数，这样可以使其更加灵活。
修改完成，Debug未通过，之后的任务还有：
1：建立小动作的派生类体系
2：将大类的统一使用标准化。
DashVec2 和 TargetVec2 一定程度还有保留的必要，而优雅地实现它们，Controller需要监听事件。要也不要，可以通过计算得出。

数据库部分拓展完成，现在可以继续对
1：建立小动作的派生类体系
2：将大类的统一使用标准化。
问题集中考虑。

想了想主要是AnimationPack是否可用以及 直接函数调用？事件列表分发？的问题
前者的想法是 虽然在功能上AnimationPack可以实现任务，但是在命名意义上的耦合会加重，反正P-H体系对我来说轻车熟路，再一次建立也无需多言。
后者的想法是 直接函数调用可以使游戏逻辑更加清晰，纵使在效率和整体逻辑顺序的统一上会出现疑问，但是可以作为后期优化使用。

需建立新的P-H体系 BitCtrl，这时候考虑Ctrl_Base究竟做什么。
Ctrl_Camera和 Ctrl_Player都是直接继承Node类而来的，因而不用修改，这倒省事了。

Ctrl类进行了初步修改，进行第一次编译以确定逻辑上是否有问题。
Ctrl基类编译通过，可以进行派生类体系建立。

先实现两个基类出来，测试是否能够编译通过。刚才的问题源于宏定义没有换行。
在测试类里尝试是否能够实现内容的分派。
已经能够顺利执行操作，但是派生类还未实现。

不着急，先完善文档。
然后充洗澡卡，然后看长安竞技